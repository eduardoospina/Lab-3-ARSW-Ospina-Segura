Parte 1 Punto 1:

    - El comsumo de CPU empieca cuando en la clase de StarProduction.java cuando crea una nueva cola y a esa cola se la manda
      a producer junto con el max value de la clase long. en donde se crea un hilo de producer responsable por en un ciclo infinito
      de asigarle el siguiente valor a dataseed y agregarlo a la cola. teniendo un tiempo de espera de 1000 milisengundos. en el momento que
      se inicia el hilo de comsumer, toma inmediatamente todos los elementos de la cola y los comsume, no cuenta ocn iempo de espere y apenas
      se agrega a la cola, es comsumido. al ser un ciclo infinito de agregar y eliminar de la cola genera que el gaste de CPU se comport de
      la manera que lo hace, teniendo picos y oscilando entre un rango statitoc nunca subiendo ni bajando de este. junto con la implementacion
      de un cicloinfinito que por si ya es un comsumo elevado en CPU.

Parte 1 Punto 2:

    - Para reducir el consume de CPU nos dimos cuenta que la clase de Comsumer.java no llegaba a tener tiempos de espera cada vez que queria
      comsumir de la cola, por lo que cada vez que se agregaba un objeto a la cola comsumer lo comsumia directamente, sin contar las 5 primero segundos
      de ventaja que tiene el hilo de producer. por lo que al implementar tiempos de espera dentro de los while infinitos permite relentizar la
      operacion de comsumo de lo producido, normalizando las operaciones de los hilos y reduciendo el comsumo de CPU de una manera muy elevada.
      en el caso contrario de remover las esperas dentro de los ciclos infinitos causaria que el comsumo de CPU se incremente exponencialmente.

Parte 1 Punto 3:

    -Para hacer que el productor produzca rapido y que el consumidor consuma lento, hay que hacer que el productr tenga un tiempo
    de espera menor que el consumidor. Para hacer que se respete el limite del stock de la colleccion, hay que usar el constructor de
    la colleccion que recibe como parametro un entero, este entero representa el limite de objetos que puede guardar la colleccion.

Parte II

    -Para hacer que sea mas eficiente la busqueda se puede tener un contador que sume de manera sincronizada cada vez que un hilo encuentra
    el host en una de las listas negras, y luego dentro del ciclo For, en el cual el hilo se encarga de verificar que el host no este e el subconjunto
    de listas negras, se agrega un condicional que verifique si ya se encontraron el numero de apariciones que hay como limite, si se cumple esta condicion
    hay que hacer que se pare la busqueda de los hilos, como se muestra en el codigo adjunto del laboratorio 1